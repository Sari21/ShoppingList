{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/item.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/logout/logout.component.ts","webpack:///src/app/logout/logout.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/new-item-modal/new-item-modal.component.ts","webpack:///src/app/new-item-modal/new-item-modal.component.html","webpack:///src/app/registration.service.ts","webpack:///src/app/registration/registration.component.ts","webpack:///src/app/registration/registration.component.html","webpack:///src/app/service/auth-gaurd.service.ts","webpack:///src/app/service/authentication.service.ts","webpack:///src/app/shopping-list.service.ts","webpack:///src/app/shopping-list/shopping-list.component.ts","webpack:///src/app/shopping-list/shopping-list.component.html","webpack:///src/app/user.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","Item","name","price","isBought","LoginComponent","router","authService","invalidLogin","userform","console","log","authenticate","value","password","navigate","onSubmit","LogoutComponent","authentocationService","logOut","NavbarComponent","NgbdModalContent","activeModal","template","NewItemModalComponent","modalService","modalRef","open","componentInstance","RegistrationService","http","url","user","post","toPromise","data","providedIn","RegistrationComponent","registrationServive","email","addUser","AuthGaurdService","next","state","checkLogin","isUserLoggedIn","redirectUrl","AuthenticationService","sessionStorage","getItem","removeItem","username","get","concat","getJSON","subscribe","u","setItem","ShoppingListService","httpOptions","headers","Authorization","item","put","newItem","delete","ShoppingListComponent","shoppingListService","makeLists","i","buy","newList","Array","boughtList","forEach","v","bought","push","addItem","deleteItem","User","environment","production","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { ShoppingListComponent } from \"./shopping-list/shopping-list.component\";\nimport { LogoutComponent } from \"./logout/logout.component\";\nimport { AuthGaurdService } from \"./service/auth-gaurd.service\";\nimport { RegistrationComponent } from \"./registration/registration.component\";\n\nconst routes: Routes = [\n  { path: \"login\", component: LoginComponent },\n  { path: \"logout\", component: LogoutComponent },\n  { path: \"signup\", component: RegistrationComponent },\n  {\n    path: \"\",\n    component: ShoppingListComponent,\n    canActivate: [AuthGaurdService]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  title = \"Shopping list\";\n}\n","<navbar></navbar>\n<router-outlet></router-outlet>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { NavbarComponent } from \"./navbar/navbar.component\";\nimport { ShoppingListComponent } from \"./shopping-list/shopping-list.component\";\n\nimport { ShoppingListService } from \"./shopping-list.service\";\nimport { NewItemModalComponent } from \"./new-item-modal/new-item-modal.component\";\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { RegistrationComponent } from './registration/registration.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    ShoppingListComponent,\n    NewItemModalComponent,\n    LoginComponent,\n    LogoutComponent,\n    RegistrationComponent\n  ],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule, FormsModule],\n  providers: [ShoppingListService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","export class Item {\n  id: string;\n  name: string;\n  price: number;\n  isBought: boolean;\n  constructor(id, name, price, isBought) {\n    this.id = id;\n    this.name = name;\n    this.price = price;\n    this.isBought = isBought;\n  }\n  buy() {\n    this.isBought = true;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { AuthenticationService } from \"../service/authentication.service\";\nimport { NgForm, NgModel, FormGroup, FormBuilder } from \"@angular/forms\";\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { Output, EventEmitter, Input } from \"@angular/core\";\nimport { FormControl, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n}) //implements OnInit\nexport class LoginComponent {\n  invalidLogin = false;\n  myForm: FormGroup;\n\n  constructor(\n    private router: Router,\n    private authService: AuthenticationService\n  ) {}\n\n  /*onSubmit(userform) {\n    this.shoppingListService.addItem({\n      name: userform.value.name,\n      price: userform.value.price\n    });\n    this.makeLists();\n  }*/\n  ngOnInit(): void {}\n  onSubmit(userform) {\n    console.log(userform);\n    if (\n      this.authService.authenticate(\n        userform.value.name,\n        userform.value.password\n      )\n    ) {\n      this.router.navigate([\"\"]);\n      this.invalidLogin = false;\n    } else this.invalidLogin = true;\n  }\n}\n","<div class=\"container justify-content-center\">\n  <form (ngSubmit)=\"onSubmit(userForm)\" #userForm=\"ngForm\">\n    <div class=\"jumbotron col-5 d-flex flex-column justify-content-center\">\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" name=\"name\" notnull ngModel />\n\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" name=\"password\" notnull ngModel />\n\n      <button class=\"btn btn-success\" routerLink=\"\" type=\"submit\">\n        Login\n      </button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { AuthenticationService } from \"../service/authentication.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-logout\",\n  templateUrl: \"./logout.component.html\",\n  styleUrls: [\"./logout.component.css\"]\n})\nexport class LogoutComponent implements OnInit {\n  constructor(\n    private authentocationService: AuthenticationService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.authentocationService.logOut();\n    this.router.navigate([\"login\"]);\n  }\n}\n","<p>logout works!</p>\n","import { Component, OnInit } from \"@angular/core\";\nimport { AuthenticationService } from \"../service/authentication.service\";\n\n@Component({\n  selector: \"navbar\",\n  templateUrl: \"./navbar.component.html\",\n  styleUrls: [\"./navbar.component.css\"]\n})\nexport class NavbarComponent implements OnInit {\n  constructor(public authService: AuthenticationService) {}\n\n  ngOnInit(): void {}\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarNavDropdown\"\n    aria-controls=\"navbarNavDropdown\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item active\"></li>\n      <li>\n        <a routerLink=\"/\" class=\"nav-link\">\n          ShoppingList\n        </a>\n      </li>\n      <li>\n        <a\n          *ngIf=\"!authService.isUserLoggedIn()\"\n          routerLink=\"/login\"\n          class=\"nav-link\"\n          >Login</a\n        >\n      </li>\n      <li>\n        <a\n          *ngIf=\"authService.isUserLoggedIn()\"\n          routerLink=\"/logout\"\n          class=\"nav-link\"\n          >LogOut</a\n        >\n      </li>\n      <li>\n        <a\n          *ngIf=\"!authService.isUserLoggedIn()\"\n          routerLink=\"/signup\"\n          class=\"nav-link\"\n          >SignUp</a\n        >\n      </li>\n\n      <!--\n\n       <li class=\"nav-item dropdown\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              id=\"navbarDropdownMenuLink\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              Dropdown link\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n              <a class=\"dropdown-item\" href=\"#\">Action</a>\n              <a class=\"dropdown-item\" href=\"#\">Another action</a>\n              <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n            </div>\n          </li>\n   -->\n    </ul>\n  </div>\n</nav>\n","import { Component, Input } from \"@angular/core\";\nimport { NgbActiveModal, NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: \"modal-content\",\n  template: `\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\">Hi there!</h4>\n      <button\n        type=\"button\"\n        class=\"close\"\n        aria-label=\"Close\"\n        (click)=\"activeModal.dismiss('Cross click')\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <p>Hello, {{ name }}!</p>\n    </div>\n    <div class=\"modal-footer\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-dark\"\n        (click)=\"activeModal.close('Close click')\"\n      >\n        Close\n      </button>\n    </div>\n  `\n})\nexport class NgbdModalContent {\n  @Input() name;\n\n  constructor(public activeModal: NgbActiveModal) {}\n}\n\n@Component({\n  selector: \"modal-component\",\n  templateUrl: \"./new-item-modal.component.html\"\n})\nexport class NewItemModalComponent {\n  constructor(private modalService: NgbModal) {}\n\n  open() {\n    const modalRef = this.modalService.open(NgbdModalContent);\n    modalRef.componentInstance.name = \"World\";\n  }\n}\n","<button class=\"btn btn-lg btn-outline-primary\" (click)=\"open()\">\n  Launch demo modal\n</button>\n","import { Injectable } from \"@angular/core\";\nimport { User } from \"./user\";\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders\n} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RegistrationService {\n  url = \"http://localhost:8080/api/user\";\n\n  constructor(private http: HttpClient) {}\n  public addUser(user: User) {\n    this.http\n      .post(this.url, user)\n      .toPromise()\n      .then(data => {\n        console.log(data);\n      });\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { RegistrationService } from \"../registration.service\";\nimport { User } from \"../user\";\n\n@Component({\n  selector: \"app-registration\",\n  templateUrl: \"./registration.component.html\",\n  styleUrls: [\"./registration.component.css\"]\n})\nexport class RegistrationComponent implements OnInit {\n  constructor(private registrationServive: RegistrationService) {}\n\n  ngOnInit(): void {}\n  onSubmit(userform) {\n    var user: User;\n    user = new User(\n      null,\n      userform.value.name,\n      userform.value.email,\n      userform.value.password\n    );\n    this.registrationServive.addUser(user);\n  }\n}\n","<div>\n  <h2>Sign up</h2>\n  <form (ngSubmit)=\"onSubmit(userForm)\" #userForm=\"ngForm\">\n    <table class=\"col-8\">\n      <tr>\n        <th>\n          <label for=\"name\">Name:</label>\n          <input type=\"text\" id=\"name\" name=\"name\" notnull ngModel />\n        </th>\n        <th>\n          <label for=\"email\">Email:</label>\n          <input type=\"email\" id=\"email\" name=\"email\" notnull ngModel />\n        </th>\n        <th>\n          <label for=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            notnull\n            ngModel\n          />\n        </th>\n\n        <th>\n          <button type=\"submit\">Sign up</button>\n        </th>\n      </tr>\n    </table>\n  </form>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router\n} from \"@angular/router\";\nimport { AuthenticationService } from \"./authentication.service\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthGaurdService implements CanActivate {\n  constructor(\n    private router: Router,\n    private authService: AuthenticationService\n  ) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    let url: string = state.url;\n\n    return this.checkLogin(url);\n  }\n  checkLogin(url: string): boolean {\n    if (this.authService.isUserLoggedIn()) {\n      return true;\n    }\n\n    // Store the attempted URL for redirecting\n    this.authService.redirectUrl = url;\n\n    // Navigate to the login page with extras\n    this.router.navigate([\"/login\"]);\n    return false;\n  }\n  /*\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authService.isUserLoggedIn()) return true;\n\n    this.router.navigate([\"login\"]);\n    return false;\n  }*/\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { tap, delay } from \"rxjs/operators\";\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders\n} from \"@angular/common/http\";\nimport { User } from \"../user\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthenticationService {\n  constructor(private http: HttpClient) {}\n  // isLoggedIn = false;\n\n  // store the URL so we can redirect after logging in\n  redirectUrl: string;\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(\"username\");\n    console.log(!(user === null));\n    return !(user === null);\n  }\n\n  logOut() {\n    sessionStorage.removeItem(\"username\");\n  }\n  public getJSON(username): Observable<any> {\n    return this.http.get(\"http://localhost:8080/api/user/\".concat(username));\n  }\n\n  authenticate(username, password): Boolean {\n    this.getJSON(username).subscribe(data => {\n      var u = new User(data.id, data.name, data.email, data.password);\n\n      if (password === u.password) {\n        sessionStorage.setItem(\"username\", username);\n        console.log(\"true\");\n        return true;\n      }\n    });\n    return false;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders\n} from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { Item } from \"./item\";\n\nimport { catchError, retry } from \"rxjs/operators\";\nimport { error } from \"@angular/compiler/src/util\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ShoppingListService {\n  url = \"http://localhost:8080/api/shoppingitem\";\n\n  constructor(private http: HttpClient) {\n    this.getJSON().subscribe(data => {\n      console.log(data);\n    });\n    /* this.http\n      .post(this.url, this.postData)\n      .toPromise()\n      .then(data => {\n        console.log(data);\n      });*/\n  }\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: \"my-auth-token\"\n    })\n  };\n\n  public getJSON(): Observable<any> {\n    return this.http.get(\"http://localhost:8080/api/shoppingitem\");\n  }\n  public buy(item: Item) {\n    this.http\n      .put(this.url.concat(\"/\").concat(item.id), item)\n      .toPromise()\n      .then(data => {\n        console.log(data);\n      });\n  }\n\n  public addItem(newItem) {\n    this.http\n      .post(this.url, newItem)\n      .toPromise()\n      .then(data => {\n        console.log(data);\n      });\n  }\n\n  public deleteItem(id) {\n    this.http\n      .delete(this.url.concat(\"/\").concat(id))\n      .toPromise()\n      .then(data => {\n        console.log(data);\n      });\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ShoppingListService } from \"../shopping-list.service\";\nimport { Item } from \"../item\";\nimport { NgModel } from \"@angular/forms\";\n\n@Component({\n  selector: \"shopping-list\",\n  templateUrl: \"./shopping-list.component.html\",\n  styleUrls: [\"./shopping-list.component.css\"]\n})\nexport class ShoppingListComponent implements OnInit {\n  newList: Array<Item>;\n  boughtList: Array<Item>;\n\n  constructor(private shoppingListService: ShoppingListService) {}\n\n  ngOnInit(): void {\n    this.makeLists();\n  }\n  buy(i): void {\n    i.buy();\n    this.shoppingListService.buy(i);\n    this.makeLists();\n  }\n  makeLists() {\n    this.newList = new Array<Item>();\n    this.boughtList = new Array<Item>();\n    this.shoppingListService.getJSON().subscribe(data => {\n      data.forEach(i => {\n        var v = new Item(i.id, i.name, i.price, i.bought);\n        if (v.isBought) {\n          this.boughtList.push(v);\n        } else {\n          this.newList.push(v);\n        }\n      });\n    });\n  }\n  onSubmit(userform) {\n    this.shoppingListService.addItem({\n      name: userform.value.name,\n      price: userform.value.price\n    });\n    this.makeLists();\n  }\n  deleteItem(item: Item) {\n    var id = item.id;\n    this.shoppingListService.deleteItem(id);\n    this.makeLists();\n  }\n}\n","<div>\n  <h2>Ezeket szeretnénk megvenni:</h2>\n  <form (ngSubmit)=\"onSubmit(userForm)\" #userForm=\"ngForm\">\n    <table class=\"col-8\">\n      <tr>\n        <th>\n          <label for=\"name\">Name:</label>\n          <input type=\"text\" id=\"name\" name=\"name\" notnull ngModel />\n        </th>\n        <th>\n          <label for=\"price\">Price:</label>\n          <input type=\"number\" id=\"price\" name=\"price\" notnull ngModel />\n        </th>\n\n        <th>\n          <button type=\"submit\">Add</button>\n        </th>\n      </tr>\n    </table>\n  </form>\n\n  <table class=\"col-8\">\n    <tr *ngFor=\"let item of newList\">\n      <th>\n        {{ item.id }}\n      </th>\n      <th>\n        {{ item.name }}\n      </th>\n      <th>\n        {{ item.price }}\n      </th>\n      <th>\n        <button (click)=\"deleteItem(item)\">\n          X\n        </button>\n      </th>\n      <th>\n        <button (click)=\"buy(item)\">pipa</button>\n      </th>\n    </tr>\n  </table>\n\n  <br />\n  <h2>Ezeket már megvettük:</h2>\n  <table class=\"col-8\">\n    <tr *ngFor=\"let item of boughtList\">\n      <th>\n        {{ item.id }}\n      </th>\n      <th>\n        {{ item.name }}\n      </th>\n      <th>\n        {{ item.price }}\n      </th>\n      <th>\n        <button (click)=\"deleteItem(item)\">\n          X\n        </button>\n      </th>\n    </tr>\n  </table>\n</div>\n","export class User {\n  id: number;\n  name: string;\n  email: string;\n  password: string;\n  constructor(id: number, name: string, email: string, password: string) {\n    this.id = id;\n    this.name = name;\n    this.email = email;\n    this.password = password;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}